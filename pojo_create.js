'use strict';
var fs = require('fs');
// var schema = require("./schema");
var schema = [{
    "name": "PoJo",
    "package": "json",
    "fields": [{
        "name": "id",
        "type": "int"
    }, {
        "name": "name",
        "type": "String"
    }, {
        "name": "address",
        "type": "String"
    }, {
        "name": "book",
        "type": "Book"
    }]
}];

var defaultindent = 4;

var getIndent = function(i) {
    return getIndentCore(i, 0);
};
var getIndentCore = function(len, i) {
    if (i >= len) {
        return "";
    }
    return getIndentCore(len, i + 1) + " ";
};

var createField = function(field, indentsize) {
    var i = indentsize == undefined ? 2 : indentsize;
    return getIndent(i) + "private " + field.type + " " + field.name + ";";
};

var createFields = function(fields, indentsize) {
    var fieldsstring = fields.map(function(f) {
        return createField(f, indentsize);
    });
    return fieldsstring.join("\n");
};

var createEmptyConstructor = function(clz, indentsize) {
    return getIndent(indentsize) + "public " + clz + "() {\n\n" + getIndent(indentsize) + "}";
};
var createVariable = function(f) {
    return f.type + " " + f.name;
};
var createArglist = function(fields) {
    var args = fields.map(createVariable);
    return args.join(", ");
};
var createAssign = function(field, indentsize) {
    return getIndent(indentsize) + "this." + field.name + " = " + field.name + ";";
};
var createAssigns = function(fields, indentsize) {
    var assigns = fields.map(function(f) {
        return createAssign(f, indentsize);
    });
    return assigns.join("\n");
};
var createConstructor = function(clz, fields, indentsize) {
    return getIndent(indentsize) + "public " + clz + "(" + createArglist(fields) + ") {\n" + createAssigns(fields, indentsize + defaultindent) + "\n" + getIndent(indentsize) + "}";
};
var createConstructors = function(clz, fields, indentsize) {
    return createEmptyConstructor(clz, indentsize) + "\n\n" + createConstructor(clz, fields, indentsize);
};
var getFuncName = function(name) {
    return name.substring(0, 1).toUpperCase() + name.substring(1);
};
var createSetter = function(field, indentsize) {
    var line1 = getIndent(indentsize) + "public void set" + getFuncName(field.name) + "(" + createVariable(field) + ") {";
    var line2 = createAssign(field, indentsize + defaultindent);
    var line3 = getIndent(indentsize) + "}";
    var lines = [line1, line2, line3];
    return lines.join("\n");
};
var createGetter = function(field, indentsize) {
    var line1 = getIndent(indentsize) + "public " + field.type + " get" + getFuncName(field.name) + "() {";
    var line2 = getIndent(indentsize + defaultindent) + "return this." + field.name + ";";
    var line3 = getIndent(indentsize) + "}";
    var lines = [line1, line2, line3];
    return lines.join("\n");
};
var createAccessor = function(field, indentsize) {
    var access = [createSetter(field, indentsize), createGetter(field, indentsize)];
    return access.join("\n");
};
var createAccessors = function(fields, indentsize) {
    var accesses = fields.map(function(f) {
        return createAccessor(f, indentsize);
    });
    return accesses.join("\n\n");
};
var createClass = function(pkg, clz, fields) {
    var line0 = "\/\/Generated by pojo_create.js ... DO NOT EDIT!"
    var line1 = "package " + pkg + ";";
    var line2 = "public class " + clz + " {";
    var line3 = createFields(fields, defaultindent);
    var line4 = createConstructors(clz, fields, defaultindent);
    var line5 = createAccessors(fields, defaultindent);
    var line6 = "}";
    var lines = [line0, line1, line2, line3, line4, line5, line6];
    return lines.join("\n\n");
};

var classcontents = schema.map(function(s) {
    return createClass(s["package"], s["name"], s["fields"]);
});


for (var i = 0; i < schema.length; i++) {
    fs.writeFile(schema[i].name + ".java", classcontents[i], 'utf8', function(err) {
        if (err) {
            console.log("error: " + err);
        } else {
            console.log('pojo create success');
        }
    });
}


// schema.js
// var schemas = [{
//     "name": "TestClass",
//     "package": "example.com",
//     "fields": [{
//         "name": "name",
//         "type": "String"
//     }, {
//         "name": "value",
//         "type": "String"
//     }]
// }];

// module.exports = schemas;